/**
 * http://cb.cdn.changbaimg.com/js/views/user_work.min.js?ver=1.1.0
 */

(function (f) {
    var b = {
        lists: function (i) {
            return f("img[data-src]")
        }, load: function (m) {
            var n = m ? m : this.lists(), l = 0, j = this;
            var i = function () {
                f(n).each(function () {
                    var p = f(this), o;
                    if (!p.data("loaded")) {
                        if (f(window).scrollTop() <= p.offset().top && f(window).scrollTop() + f(window).height() >= p.offset().top) {
                            o = j.getImgSize(p);
                            if (o) {
                                p.attr("width", "100%").attr("height", o)
                            }
                            p.attr("src", p.attr("data-src"));
                            p.data("loaded", "true");
                            l++
                        }
                    }
                })
            };
            var k = function () {
                if (n.length == l) {
                    f(window).unbind("scroll", k);
                    f(window).unbind("resize", k);
                    return
                }
                i()
            };
            f(window).bind("scroll", k);
            f(window).bind("resize", k);
            k()
        }, getImgSize: function (j) {
            var m, k, i;
            k = f(j).parent().width();
            if (f(j).attr("width") && f(j).attr("height")) {
                m = f(j).attr("width");
                i = f(j).attr("height");
                if (m < k) {
                    return null
                } else {
                    return i * (k / m)
                }
            }
            var l = new Image();
            l.onload = l.onerror = l.onabort = function () {
                this.onload = this.onerror = this.onabort = null;
                m = this.width;
                i = this.height;
                if (m && i) {
                    return i * (k / m)
                } else {
                    return null
                }
            }
        }
    };
    b.load();
    function a(l, j) {
        var i = l.outerWidth(), k = l.outerHeight();
        f(l).html("");
        f(l).qrcode({width: i, height: k, text: j})
    }

    function e(i) {
        i.each(function (j, k) {
            if (twemoji) {
                twemoji.parse(k)
            }
        })
    }

    function d() {
        if (f("body").attr("data-islogin") != 1) {
            window.location.href = commonObj.data.loginUrl;
            return false
        }
    }

    e(f(".twemoji"));
    var c = function () {
        f(".qr-code-tips a").on("mouseover", function () {
            if (!f(".qr-code").attr("loaded")) {
                a(f(".qr-code-tips .qr-code .qr"), location.origin + location.pathname + location.search);
                f(".qr-code").attr("loaded", "true")
            }
            f(".qr-code").addClass("cur")
        });
        f("body").on("mouseover", function (r) {
            var q = r.target || r.srcElement;
            q = f(q);
            if (!q.hasClass("qr-code-tips") && f(".qr-code-tips").has(q).length == 0) {
                f(".qr-code").removeClass("cur")
            }
        });
        var l, i, m = f(".widget-download-layer");
        f(".download a").on("click", function () {
            l = f(this).attr("link");
            if (f(this).hasClass("ios")) {
                i = "唱吧IOS版"
            } else {
                i = "唱吧Android版"
            }
            m.find(".title").html(i);
            a(m.find(".qr-wrapper a"), l);
            m.find(".dl-to-pc a").attr("href", l);
            m.show()
        });
        m.find(".close").on("click", function () {
            f(".widget-download-layer").hide()
        });
        m.on("click", function (r) {
            var q = r.target || r.srcElement;
            q = f(q);
            if (q.hasClass("cover") || f(".cover").has(q).length == 0) {
                f(".widget-download-layer").hide()
            }
        });
        var j, k, p, o;
        f(".focus", ".focus-follower").on("click", function () {
            j = f(this).attr("data-status");
            k = f(this).attr("data-userid");
            o = this;
            if (j && j > 1) {
                return
            }
            d();
            f.getJSON("http://changba.com/member/personcenter/oprUserRelation.php?status=0&wid=" + k, function (q) {
                if (q && q.message == "no") {
                    f(o).removeAttr("data-status").find("em").html("已关注")
                } else {
                    if (q && q.message) {
                        alert(q.message)
                    }
                }
            })
        });
        f(".fav", ".work-info").on("click", function () {
            j = f(this).attr("data-status");
            p = f(this).attr("data-workid");
            o = this;
            if (j && j != 0) {
                return
            }
            d();
            f.getJSON("http://changba.com/now/collectWork.php?ac=collect&workid=" + p, function (q) {
                if (q && q.errorCode == 0) {
                    f(o).removeAttr("data-status").find("em").html("已收藏")
                } else {
                    if (q && q.result) {
                        alert(q.result)
                    }
                }
            })
        });
        if (f.inArray(f("body").attr("data-songid"), ["1078515", "1078590", "1080105", "1080110", "1080209", "1081487", "1081499", "1090182", "1090189", "1090199", "1090200", "1090201", "1090204", "1090272", "1090325", "1090340", "1095947", "1096329"]) >= 0) {
            var n = document.createElement("script");
            n.src = "//cdn-comp.changbaimg.com/js/game/dj/lrc/" + f("body").attr("data-songid") + ".js?ver=1.0.0";
            document.getElementsByTagName('head')[0].appendChild(n)
        }
    };
    c();
    var h = function () {
        this.count = Number(f("body").attr("data-count"));
        this.page = 1;
        this.size = 9;
        this.data = {};
        this.pageCount = Math.ceil(this.count / this.size);
        this.workid = f("body").attr("data-workid");
        this.container = f(".widget-comment .comment-list");
        this.url = "http://changba.com/now/getComments.php?";
        this.controller = f(".controller a[data-action]");
        this.loadTag = true
    };
    h.prototype.init = function () {
        if (this.container.find("ul").length < 1) {
            this.container.css("height", this.container.find(".no-comment-tips").outerHeight(true))
        } else {
            this.container.css("height", this.container.find("ul").outerHeight())
        }
        this.bindEvent()
    };
    h.prototype.getCommentData = function (l) {
        var i = l, k = this, j;
        if (i == "prev" && k.page == 1) {
            k.controller.filter("[data-action=prev]").css("visibility", "hidden");
            return
        } else {
            if (i == "next" && k.page == k.pageCount) {
                k.controller.filter("[data-action=next]").css("visibility", "hidden");
                return
            } else {
                k.page = (i == "next" ? k.page + 1 : k.page - 1);
                k.controller.css("visibility", "visible")
            }
        }
        if (k.page == 1) {
            k.controller.filter("[data-action=prev]").css("visibility", "hidden")
        }
        if (k.page == k.pageCount) {
            k.controller.filter("[data-action=next]").css("visibility", "hidden")
        }
        if (k.data[k.page]) {
            k.getCommentPainted(k.data[k.page]);
            return
        }
        k.loadTag = false;
        f.getJSON(k.url + "workid=" + k.workid + "&page=" + k.page + "&pageSize=" + k.size, function (m) {
            if (m && m.errorcode == 0) {
                k.getCommentPainted(m.result.comments);
                k.data[k.page] = m.result.comments;
                k.loadTag = true
            }
        })
    };
    h.prototype.getCommentPainted = function (n) {
        var k = n, l = this, o = "", m = f('<ul class="clearfix" />');
        if (k.length < 0) {
            return
        }
        for (var j = 0; j < k.length; j++) {
            o += '<li class="items"><a class="poster" href="' + k[j].user.homeurl + '" target="_blank"><img src="//cb.cdn.changbaimg.com/images/now/show/photo-default.png" data-src="' + (k[j].user.headphoto ? k[j].user.headphoto.replace(".jpg", "_200_200.jpg") : "//cb.cdn.changbaimg.com/images/now/show/photo-default.png") + '"></a><div class="info"><span class="uinfo"><a class="uname twemoji" target="_blank" href="' + k[j].user.homeurl + '">' + k[j].user.nickname + '</a><em class="post-time">' + k[j].time + '</em></span><span class="content twemoji">' + (/^\[Жs.*\]$/.test(k[j].content) ? ('<img src="http://a179img.changba.com/cache/test/s' + k[j].content.substring("[Ж/".length, k[j].content.indexOf("]")) + '" style="height: 50px;" />') : k[j].content) + "</span></div></li>"
        }
        m.html(o).css("display", "none").appendTo(l.container);
        l.container.css("height", m.outerHeight());
        o = null;
        m.siblings("ul").fadeOut("slow", function () {
            f(this).remove()
        });
        m.fadeIn("slow");
        f(".twemoji", m).each(function (p, q) {
            if (twemoji) {
                twemoji.parse(q)
            }
        });
        b.load(m.find("img[data-src]"))
    };
    h.prototype.bindEvent = function () {
        var i = this, j;
        i.controller.on("click", function () {
            if (!i.loadTag) {
                return
            }
            j = f(this).attr("data-action");
            i.getCommentData(j)
        })
    };
    var g = new h();
    g.init()
})(jQuery);
(function (c) {
    function b() {
        this.dom = null
    }

    b.uiMode = {Full: "full", Mini: "mini", None: "none", Invisible: "invisible"};
    b.prototype = {
        CreateAt: function (f) {
            this.dom = document.createElement("object");
            this.dom.classid = "CLSID:6BF52A52-394A-11d3-B153-00C04F79FAA6";
            window.dom = this.dom;
            var e = document.getElementById(f);
            e.innerHTML = "";
            e.appendChild(this.dom);
            this._Init()
        }, BindID: function (e) {
            this.dom = document.getElementById(e);
            this._Init()
        }, _Init: function () {
            var e = this;
            if (!window.attachEvent) {
                this.dom.attachEvent = function (g, f) {
                }
            }
            this.dom.attachEvent("PlayStateChange", function (f) {
                e.onPlayStateChange(f)
            });
            this.dom.attachEvent("Buffering", function (f) {
                e.onBuffering(f)
            });
            this.dom.attachEvent("Error", function () {
                e.onError()
            });
            this.dom.attachEvent("PositionChange", function (f, g) {
                e.onPositionChange(f, g)
            });
            this.dom.attachEvent("StatusChange", function (f) {
                e.onStatusChange(f)
            })
        }, onPlayStateChange: function (e) {
            switch (e) {
                case 1:
                    this.onStop();
                    break;
                case 2:
                    this.onPaused();
                    break;
                case 3:
                    this.onPlay();
                    if (!this.hasLoaded) {
                        this.onReady();
                        this.hasLoaded = true
                    }
                    break;
                case 4:
                    break;
                case 5:
                    break;
                case 6:
                    this.onBuffering_SC();
                    break;
                case 7:
                    break;
                case 8:
                    this.onMediaEnded();
                    break;
                case 9:
                    this.onTransitioning();
                    break;
                case 10:
                    break;
                case 11:
                    break;
                case 12:
                    break;
                case 0:
                    break;
                default:
                    break
            }
        }, onStop: function () {
        }, onPaused: function () {
        }, onPlay: function () {
        }, onBuffering_SC: function () {
        }, onTransitioning: function () {
        }, onMediaEnded: function () {
        }, onError: function () {
        }, onPositionChange: function (e, f) {
        }, onStatusChange: function () {
        }, onBuffering: function (e) {
        }, onReady: function () {
        }, setMode: function (e) {
            this.dom.uiMode = e
        }, setVolume: function (e) {
            this.dom.settings.volume = e
        }, setAutoStart: function (e) {
            this.dom.settings.autoStart = e
        }, getMediaName: function () {
            var e = this.dom.currentMedia;
            if (e) {
                return e.name
            }
            return ""
        }, getMediaDuration: function () {
            var e = this.dom.currentMedia;
            if (e) {
                return e.duration
            }
            return ""
        }, getMediaDurationString: function () {
            var e = this.dom.currentMedia;
            if (e) {
                return e.durationString
            }
            return ""
        }, getStatus: function () {
            return this.dom.status
        }, getPosition: function () {
            return this.dom.controls.currentPosition
        }, setPosition: function (e) {
            this.dom.controls.currentPosition = e
        }, getPositionString: function () {
            return this.dom.controls.currentPositionString
        }, getPlayState: function () {
            return this.dom.playState
        }, OpenUrl: function (e) {
            this.dom.URL = e
        }, Play: function () {
            this.dom.controls.play()
        }, Pause: function () {
            this.dom.controls.pause()
        }, Stop: function () {
            this.dom.controls.stop()
        }
    };
    var d = new b();
    var a = function () {
        this.processBtn = c("#process-btn");
        this.playedProcessBar = c("#work-played-bar");
        this.audio = document.getElementById("audio");
        this.hasAudio = !!(document.createElement("audio").canPlayType);
        this.lrcContainer = c("#lrc_container");
        this.LrcTimerId = 0
    };
    a.prototype.init = function () {
        if (!this.hasAudio && this.audio) {
            var e = this.mpl = new b();
            e.CreateAt("audio_container");
            e.setVolume(100);
            e.setMode(b.uiMode.Invisible);
            e.setAutoStart(true)
        }
        c(".twemoji").each(function (f, g) {
            if (twemoji) {
                twemoji.parse(g)
            }
        });
        this.bindEvents()
    };
    a.prototype.bindEvents = function () {
        var s = this, f = c(".time-counter").children().first();

        function g() {
            s.processBtn.on("mousedown", function (t) {
                s.processBtn.data("mousedown", true);
                t = t || window.event;
                s.processBtn.data("offsetX", (t.clientX || t.pageX) - s.playedProcessBar.width())
            });
            c(document).on("mouseup", function () {
                s.processBtn.data("mousedown", false);
                s.processBtn.data("offsetX", undefined)
            }).on("mousemove", function (u) {
                if (s.processBtn.data("mousedown")) {
                    u = u || window.event;
                    var t = u.clientX || u.pageX;
                    if (!s.processBtn.data("offsetX")) {
                        s.processBtn.data("offsetX", t)
                    }
                    var w = (t - s.processBtn.data("offsetX"));
                    if (w < 0) {
                        s.playedProcessBar.width(0);
                        f.html("00:00");
                        if (s.audio) {
                            if (s.hasAudio) {
                                s.audio.currentTime = 0
                            } else {
                                s.mpl.seek(0)
                            }
                        } else {
                            s.player.seek(0)
                        }
                        return false
                    } else {
                        if (w > 368 - 29) {
                            s.playedProcessBar.width(368 - 29);
                            f.html(c(".time-counter > .time-total").html());
                            if (s.audio) {
                                if (s.hasAudio) {
                                    s.audio.currentTime = s.audio.duration
                                } else {
                                    s.mpl.setPosition(s.mpl.dom.currentMedia.duration)
                                }
                            } else {
                                s.player.seek(s.player.getPosition())
                            }
                            return false
                        }
                    }
                    s.playedProcessBar.width(w);
                    if (s.audio) {
                        if (s.hasAudio) {
                            var v = w / 339 * s.audio.duration
                        } else {
                            var v = w / 339 * s.mpl.dom.currentMedia.duration
                        }
                    } else {
                        var v = w / 339 * s.player.getDuration()
                    }
                    s.showLrc(v * 1000);
                    i = Math.floor(v / 60), m = Math.floor(v - i * 60);
                    if (i < 10) {
                        i = "0" + i
                    }
                    if (m < 10) {
                        m = "0" + m
                    }
                    f.html(i + ":" + m);
                    if (s.audio) {
                        if (s.hasAudio) {
                            s.audio.currentTime = v
                        } else {
                            s.mpl.setPosition(v)
                        }
                    } else {
                        s.player.seek(v)
                    }
                }
                return false
            })
        }

        c(".time").on("click", function (w) {
            var v = w.target || w.srcElement;
            if (v.id === "process-btn") {
                return false
            }
            var x = c(this).offset().left, u = (w.pageX || w.clientX) - x - 29 / 2;
            if (u < 0) {
                u = 0
            }
            if (u > 339) {
                u = 339
            }
            s.playedProcessBar.width(u);
            if (s.audio) {
                if (s.hasAudio) {
                    var t = u / 339 * s.audio.duration
                } else {
                    var t = u / 339 * s.mpl.dom.currentMedia.duration
                }
            } else {
                var t = u / 339 * s.player.getDuration()
            }
            s.showLrc(t * 1000);
            i = Math.floor(t / 60), m = Math.floor(t - i * 60);
            if (i < 10) {
                i = "0" + i
            }
            if (m < 10) {
                m = "0" + m
            }
            f.html(i + ":" + m);
            if (s.audio) {
                if (s.hasAudio) {
                    s.audio.currentTime = t
                } else {
                    s.mpl.setPosition(t)
                }
            } else {
                s.player.seek(t)
            }
            return false
        });
        c("#play-btn").on("click", function () {
            if (c(this).hasClass("work-busy-btn")) {
                return
            }
            var t = c(this);
            if (t.hasClass("play")) {
                t.removeClass("play").addClass("pause");
                if (s.hasAudio) {
                    audio.play()
                } else {
                    s.mpl.Play()
                }
            } else {
                t.removeClass("pause").addClass("play");
                if (s.hasAudio) {
                    audio.pause()
                } else {
                    s.mpl.Pause()
                }
            }
        });
        if (s.hasAudio && this.audio) {
            if (this.audio.duration > 0) {
                var i = Math.floor(s.audio.duration / 60), m = Math.floor(s.audio.duration - i * 60);
                if (i < 10) {
                    i = "0" + i
                }
                if (m < 10) {
                    m = "0" + m
                }
                c(".time-counter > .time-total").html(i + ":" + m);
                s.unitWidth = (368 - 29) / s.audio.duration;
                g();
                c("#play-btn").removeClass("work-busy-btn")
            } else {
                var k = window.setInterval(function () {
                    if (s.audio.duration > 0) {
                        clearInterval(k);
                        var t = Math.floor(s.audio.duration / 60), u = Math.floor(s.audio.duration - t * 60);
                        if (t < 10) {
                            t = "0" + t
                        }
                        if (u < 10) {
                            u = "0" + u
                        }
                        c(".time-counter > .time-total").html(t + ":" + u);
                        s.unitWidth = (368 - 29) / s.audio.duration;
                        g();
                        c("#play-btn").removeClass("work-busy-btn");
                        s.audio.play();
                        c("#play-btn").removeClass("play").addClass("pause")
                    }
                }, 300)
            }
            s.audio.onplay = function (t) {
                c("#play-btn").removeClass("work-busy-btn");
                c("#play-btn").removeClass("play").addClass("pause")
            };
            var n = window.setInterval(function () {
                var w = s.audio.currentTime, t = Math.floor(w / 60), v = Math.floor(w - t * 60);
                s.showLrc(w * 1000);
                if (t < 10) {
                    t = "0" + t
                }
                if (v < 10) {
                    v = "0" + v
                }
                f.html(t + ":" + v);
                var u = s.unitWidth * w;
                if (u < 0) {
                    u = 0
                }
                if (u > 368 - 29) {
                    u = 368 - 29
                }
                s.playedProcessBar.width(s.unitWidth * w)
            }, 500)
        } else {
            if (this.audio) {
                var e = s.mpl, r;
                e.onPlay = function () {
                    var t = c("#play-btn");
                    t.removeClass("play").addClass("pause");
                    h()
                };
                e.onStop = function () {
                    var t = c("#play-btn");
                    t.removeClass("pause").addClass("play");
                    clearInterval(r);
                    clearInterval(s.LrcTimerId)
                };
                e.onPaused = function () {
                    clearInterval(r);
                    clearInterval(s.LrcTimerId)
                };
                var h = function () {
                    r = window.setInterval(function () {
                        var w = e.getPosition(), t = Math.floor(w / 60), v = Math.floor(w - t * 60);
                        s.showLrc(w * 1000);
                        if (t < 10) {
                            t = "0" + t
                        }
                        if (v < 10) {
                            v = "0" + v
                        }
                        f.html(t + ":" + v);
                        var u = s.unitWidth * w;
                        if (u < 0) {
                            u = 0
                        }
                        if (u > 368 - 29) {
                            u = 368 - 29
                        }
                        s.playedProcessBar.width(s.unitWidth * w)
                    }, 1000)
                };
                e.onReady = function (v) {
                    var t = Math.floor(s.mpl.dom.currentMedia.duration / 60), u = Math.floor(s.mpl.dom.currentMedia.duration - t * 60);
                    if (t < 10) {
                        t = "0" + t
                    }
                    if (u < 10) {
                        u = "0" + u
                    }
                    c(".time-counter > .time-total").html().html(t + ":" + u);
                    s.unitWidth = (368 - 29) / s.mpl.dom.currentMedia.duration;
                    g();
                    c("#play-btn").removeClass("work-busy-btn")
                };
                e.OpenUrl(s.audio.src)
            } else {
                if (c("#pad_video").length) {
                    var l = new Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);

                    function o(A) {
                        var z, y, w, u;
                        var x, t, v;
                        t = A.length;
                        x = 0;
                        v = "";
                        while (x < t) {
                            do {
                                z = l[A.charCodeAt(x++) & 255]
                            } while (x < t && z == -1);
                            if (z == -1) {
                                break
                            }
                            do {
                                y = l[A.charCodeAt(x++) & 255]
                            } while (x < t && y == -1);
                            if (y == -1) {
                                break
                            }
                            v += String.fromCharCode((z << 2) | ((y & 48) >> 4));
                            do {
                                w = A.charCodeAt(x++) & 255;
                                if (w == 61) {
                                    return v
                                }
                                w = l[w]
                            } while (x < t && w == -1);
                            if (w == -1) {
                                break
                            }
                            v += String.fromCharCode(((y & 15) << 4) | ((w & 60) >> 2));
                            do {
                                u = A.charCodeAt(x++) & 255;
                                if (u == 61) {
                                    return v
                                }
                                u = l[u]
                            } while (x < t && u == -1);
                            if (u == -1) {
                                break
                            }
                            v += String.fromCharCode(((w & 3) << 6) | u)
                        }
                        return v
                    }

                    c("#pad_video").attr("src", o(jwplayer.utils.qn))
                } else {
                    if (c("#play-video-btn").length) {
                        var p = c("#play-video-btn"), r, j;
                        var l = new Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);

                        function o(A) {
                            var z, y, w, u;
                            var x, t, v;
                            t = A.length;
                            x = 0;
                            v = "";
                            while (x < t) {
                                do {
                                    z = l[A.charCodeAt(x++) & 255]
                                } while (x < t && z == -1);
                                if (z == -1) {
                                    break
                                }
                                do {
                                    y = l[A.charCodeAt(x++) & 255]
                                } while (x < t && y == -1);
                                if (y == -1) {
                                    break
                                }
                                v += String.fromCharCode((z << 2) | ((y & 48) >> 4));
                                do {
                                    w = A.charCodeAt(x++) & 255;
                                    if (w == 61) {
                                        return v
                                    }
                                    w = l[w]
                                } while (x < t && w == -1);
                                if (w == -1) {
                                    break
                                }
                                v += String.fromCharCode(((y & 15) << 4) | ((w & 60) >> 2));
                                do {
                                    u = A.charCodeAt(x++) & 255;
                                    if (u == 61) {
                                        return v
                                    }
                                    u = l[u]
                                } while (x < t && u == -1);
                                if (u == -1) {
                                    break
                                }
                                v += String.fromCharCode(((w & 3) << 6) | u)
                            }
                            return v
                        }

                        var q = s.player = jwplayer("container").setup({
                            flashplayer: "//cb.cdn.changbaimg.com/js/common-plug/jwplayer/player.swf",
                            file: o(jwplayer.utils.qn),
                            width: 478,
                            height: 478,
                            controlbar: "none",
                            autostart: "true",
                            bufferlength: "20",
                            showdigits: "total",
                            dock: true,
                            events: {
                                onReady: function () {
                                    console.log("准备就绪!!!");
                                    c('[name="flashvars"]').attr("value", "")
                                }, onPlay: function () {
                                    if (!j) {
                                        var t = Math.floor(q.getDuration() / 60), u = Math.floor(q.getDuration() - t * 60);
                                        if (t < 10) {
                                            t = "0" + t
                                        }
                                        if (u < 10) {
                                            u = "0" + u
                                        }
                                        c(".time-counter > .time-total").html(t + ":" + u);
                                        s.unitWidth = (368 - 29) / q.getDuration();
                                        g();
                                        c("#play-btn").removeClass("work-busy-btn");
                                        j = true
                                    }
                                    h();
                                    p.removeClass("play").addClass("pause")
                                }, onPause: function () {
                                    window.clearInterval(r);
                                    clearInterval(s.LrcTimerId);
                                    p.removeClass("pause").addClass("play")
                                }, onError: function (t) {
                                    console.log("播放器出错!!!" + t.message)
                                }, onMute: function (t) {
                                }
                            }
                        });
                        var h = function () {
                            r = window.setInterval(function () {
                                var w = q.getPosition(), t = Math.floor(w / 60), v = Math.floor(w - t * 60);
                                s.showLrc(w * 1000);
                                if (t < 10) {
                                    t = "0" + t
                                }
                                if (v < 10) {
                                    v = "0" + v
                                }
                                f.html(t + ":" + v);
                                var u = s.unitWidth * w;
                                if (u < 0) {
                                    u = 0
                                }
                                if (u > 368 - 29) {
                                    u = 368 - 29
                                }
                                s.playedProcessBar.width(s.unitWidth * w)
                            }, 1000)
                        };
                        p.on("click", function () {
                            if (q.getState() != "PLAYING") {
                                q.play(true)
                            } else {
                                q.play(false)
                            }
                        });
                        h()
                    }
                }
            }
        }
        c(".content").each(function () {
            var t = c.trim(c(this).text());
            if (/^\[Жs.*\]$/.test(t)) {
                c(this).html('<img style="height: 50px;" src="http://a179img.changba.com/cache/test/s' + t.substring("[Ж/".length, t.indexOf("]")) + '" alt="" />')
            }
        })
    };
    a.prototype.showLrc = function (j) {
        if (!window.song_lrc) {
            return false
        }
        var f = this, k;
        f.lrc = song_lrc;
        for (var e = f.lrc.length, g = 0; g < e; g++) {
            var h = f.lrc[g];
            if (h.start <= j && h.start + h.duration >= j) {
                k = h;
                break
            }
        }
        if (k && k.text !== f.lrcContainer.text()) {
            clearTimeout(f.LrcTimerId);
            f.lrcContainer.text(k.text);
            f.LrcTimerId = setTimeout(function () {
                f.lrcContainer.text("")
            }, k.start - j + k.duration)
        }
    };
    (new a()).init()
})(jQuery);